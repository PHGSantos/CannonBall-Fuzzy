/*
	Example: A tip calculation FIS (fuzzy inference system)
	Calculates out_angle and out_speed based on 'diff_x' and 'diff_y'

									Pablo Cingolani 
*/

FUNCTION_BLOCK tipper	// Block definition (there may be more than one block per file)

// Define input variables
VAR_INPUT				
	diff_x : REAL;
	diff y : REAL;
END_VAR

// Define output variable
VAR_OUTPUT				
	 //adjust_angle: REAL;
     adjust_speed: REAL;
END_VAR

// Fuzzify input variable 'diff_x': {'poor', 'good' , 'excellent'}
FUZZIFY diff_x			
	TERM grande := (-150, 0) (-200, 1) (-500,1); 
	TERM razoavel := (-200, 0) (-150,1) (150,1) (200,0);
	TERM excellent := (150, 0) (200, 1) (500,1);
END_FUZZIFY

// Fuzzify input variable 'diff_y: { 'rancid', 'delicious' }
FUZZIFY diff_y			
	TERM rancid := (0, 1) (1, 1) (3,0) ;
	TERM delicious := (7,0) (9,1);
END_FUZZIFY

// Defzzzify output variable 'tip' : {'', '', '' }
DEFUZZIFY adjust_angle			
	TERM grande_negativo := (-90,1) (50,0);
	TERM medio_negativo := (-60,0) (-45,1) (-30,0);
	TERM pequeno := (-40,0) (0,1) (40,0);
	TERM medio_positivo := (30,0) (45,1) (60,0);
	TERM grande_positivo := (50,0) (90,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY



// Defzzzify output variable 'tip' : {'low', 'medium', 'high' }
DEFUZZIFY adjust_speed			
	TERM baixo := (-20,0) (-10,1) (0,0);
	TERM moderado := (-10,0) (0,1) (10,0);
	TERM alto := (0,0) (10,1) (20,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

// Inference rules
RULEBLOCK No1
	AND : MIN;	// Use 'min' for 'and'
	ACT : MIN;	// Use 'min' activation method
	ACCU : MAX;	// Use 'max' accumulation method

	RULE 1 : IF diff_x IS poor OR food IS rancid THEN tip IS cheap;
	RULE 2 : IF service IS good THEN tip IS average; 
	RULE 3 : IF service IS excellent AND food IS delicious THEN tip IS generous;
END_RULEBLOCK

END_FUNCTION_BLOCK